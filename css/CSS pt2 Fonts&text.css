*{
	padding: 0;
	margin: 0;
	border: 0;
}
*,*:before,*:after{
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
:focus,:active{outline: none;}
a:focus,a:active{outline: none;}

nav,footer,header,aside{display: block;}

html,body{
	height: 100%;
	width: 100%;
	font-size: 100%;
	line-height: 1;
	font-size: 14px;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}
input,button,textarea{font-family:inherit;}

input::-ms-clear{display: none;}
button{cursor: pointer;}
button::-moz-focus-inner {padding:0;border:0;}
a, a:visited{text-decoration: none;}
a:hover{text-decoration: none;}
ul li{list-style: none;}
img{vertical-align: top;}

h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight: 400;}

.arial{
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}

/*обращение к class="arial"С помощью font-family можно задать семейство шрифта, которым будет написан текст. 
Можно прописать конкретный шрифт, например "Arial". А можно задать желаемый тип шрифта: например, с засечками serif или без засечек sans-serif.
Обычно в font-family задают сразу несколько шрифтов, перечисляя их через запятую.
На первом месте ставят самый редкий шрифт из тех, что хотят использовать для этого элемента.
Затем — похожий, но более распространённый шрифт. В самом конце — желаемый тип шрифта.
Браузер проходит по списку слева направо и использует первый найденный на компьютере шрифт.*/

.fontsize30{
	font-size: 30px;
}

/* Определяет размер шрифта элемента.
em — относительная единица, которая определяется по родительскому элементу. 1em — это стандартный размер текста, который установлен в браузере.
 Обычно он равен 16px.
rem — работает похожим образом, что em, но в этом случае размер шрифта зависит не от родительского элемента, а от корневого html элемента.
% — значение в процентах, например 80%. Работает похожим образом, что и единица em. За 100% берётся размер текста в родительском элементе.
px — можно задать значение в пикселях, когда важно, чтобы шрифт всегда был одного конкретного размера, вне зависимости от браузера и настроек устройства.
запись в VScode: "fz30" */

.italic{
	font-style: italic;
}

/* Определяет начертание шрифта. Определяет начертание шрифта: обычное, курсивное или наклонное.
normal — обычное начертание текста (значение по умолчанию).
italic — курсивное начертание.
oblique — наклонное начертание, которое можно использовать, если у шрифта нет курсивного варианта начертания.
 запись в VScode: "fsi/n/o" */

.font700{
	font-weight: 700;
}

/* Свойство font-weight задаёт насыщенность шрифта: от самого тонкого до самого жирного начертания.
normal — стандартная толщина шрифта. Соответствует значению 400. Значение по умолчанию.
bold — жирный набор текста. Соответствует 700.
lighter — более тонкий вариант, чем в родительском элементе. Например, светлое начертание Light.
bolder — более насыщенный вариант, чем в родительском элементе. Например, сверхжирное начертание Extra Bold.
Разница в числовых значением в шаг 100 от 100 до 900 где 100 - самый тонкий, 900 - самый толстый 
запись в VScode: "fw700"*/

.colorred{
	color: red;
}

/* Цвет текста — наследуемое свойство. Если на странице преобладает какой-то цвет, то его можно задать для селектора html.
В этот цвет будет автоматически окрашен весь текст на странице.
Чтобы задать фон текста, используйте свойство background-color, а рамки элемента можно раскрасить с помощью border-color.
 */

.textright{
	text-align: right;
}

/* Выравнивание текста по правому краю. Left - левому
запись в VScode: "tar" */

.textcenter{
	text-align: center;
}

/* Выравнивание текста центру.
запись в VScode: "tac" */

.textjustify{
	text-align: justify;
}

/* Выравнивание текста на всю ширину страницы добавляя пробелы в случае необходимости.
запись в VScode: "taj" */

.decoration{
	text-decoration: underline overline line-through;
}

/* Подчеркнутый, над текстом линия и зачеркнутый, может использованы все три значения
запись в VScode: "tdu/o/l" */

.textshadow{
	text-shadow: 1px 1px 1px #000;
}

/* Тень. Синтаксис: text-shadow: смещение по гор. смещение по верт. размер размытия цвет 
запись в VScode: "ts" */

.texttransform{
	text-transform: uppercase;
}

/* Параметр text-transform позволяет трансформировать буквы в тексте.
uppercase — все буквы в тексте, к которому применяется это значение, будут трансформированы в заглавные.
lowercase — все буквы будут преобразованы в строчные, маленькие.
capitalize — каждое слово начинается с прописной, заглавной буквы. Это часто необходимо при работе с текстами на английском языке.
full-width — латинские буквы и иероглифы восточно-азиатских языков вписываются в квадрат.
full-size-kana — латинские буквы и иероглифы восточно-азиатских языков вписываются в квадрат, 
			но используются в рамках <ruby> элементов (например, когда вам нужно обозначить новый иероглиф, и сверху правила его чтения) 
none — значение по умолчанию, отменяет все трансформации.
запись в VScode: "tt"  */

.indent{
	text-indent: 50px;
}

/* Свойство text-indent управляет отступом первой строки текста: либо вытягивает строку за пределы абзаца, либо утягивает её внутрь. 
Используется для выделения начала абзаца при плотном наборе без отступов между абзацами.
Строка смещается по горизонтали относительно начала строки.
запись в VScode: "ti" */

.lspace{
	letter-spacing: 5px;
}

/* Пробелы между буквами 
запись в VScode: "ls" */

.wspace{
	word-spacing: 5px;
}

/* Пробелы между словами 
запись в VScode: "ws" */

.whitespace{
	white-space: nowrap;
	
}

/* white-space указывает браузеру, как обрабатывать пробелы в тексте.
normal -
Если в строке есть несколько подряд идущих пробелов, то браузер схлопывает их в один пробел. Я из лесу вышел = Я из лесу вышел.
Все переносы строк в HTML внутри тега также заменяются на пробел: 
nowrap -
Подряд идущие пробелы и переносы строк обрабатываются так же, как и с normal, но браузер перестаёт учитывать границы элемента и выводит весь текст в одну строку.
pre -
Сохраняется всё форматирование из HTML, включая переносы строк и последовательности пробелов. Границы элемента игнорируются, и текст может выходить за них.
pre-wrap -
Сохраняется всё форматирование из HTML, включая переносы строк и последовательности пробелов. В отличие от pre текст переносится автоматически при достижении границы элемента.
pre-line -
Подряд идущие пробелы схлопываются, но остальное форматирование из HTML сохраняется, текст переносится в местах переноса строк в HTML.
Текст переносится автоматически при достижении границ элемента.
break-spaces -
Поведение аналогично pre-wrap, за исключением одного отличия. 
Какая-то их часть останется на той же строке, дополняя ширину элемента до максимально допустимой, а вторая часть пробелов перенесётся на новую строку.
запись в VScode: "whs" */

.lineheight{
	line-height: 30px;
}

/* Устанавливает межстрочный интервал текста */
nav .list{
    text-align: left;
    font-size: 20px;
    padding-left: 20px;
    margin: 7px 0px 0px 25px;
    background: url(../img/icons/vpered.svg) no-repeat;
    background-position: left top;
    background-attachment: scroll;
}